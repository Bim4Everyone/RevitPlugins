<UserControl x:Class="RevitClashDetective.Views.CriterionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RevitClashDetective.Views"
             xmlns:vm="clr-namespace:RevitClashDetective.ViewModels.FilterCreatorViewModels"
             xmlns:model="clr-namespace:RevitClashDetective.Models"
             xmlns:setEvaluator="clr-namespace:RevitClashDetective.Models.Evaluators"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             mc:Ignorable="d"
             Name="_this"
             d:DataContext="{d:DesignInstance vm:SetViewModel, IsDesignTimeCreatable=False}">
    <UserControl.Resources>
        <Style TargetType="ListBoxItem">
            <Setter Property="Template">
                <Setter.Value>
                    <ControlTemplate TargetType="ListBoxItem">
                        <ContentPresenter/>
                    </ControlTemplate>
                </Setter.Value>
            </Setter>
        </Style>
        <Style TargetType="{x:Type Border}" x:Key="border">
            <Setter Property="BorderThickness" Value="4 1 1 1"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding SelectedEvaluator.SetEvaluator.Message}" Value="И">
                    <Setter Property="BorderBrush" Value="Green"/>
                </DataTrigger>
                <DataTrigger Binding="{Binding SelectedEvaluator.SetEvaluator.Message}" Value="ИЛИ">
                    <Setter Property="BorderBrush" Value="MediumBlue"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
        <DataTemplate DataType="{x:Type vm:SetViewModel}">
            <Border Margin="5" Style="{StaticResource border}">
                <Grid >
                    <Grid.RowDefinitions>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <DockPanel Grid.Row="0" LastChildFill="True" HorizontalAlignment="Stretch">
                        <Button Margin="3" DockPanel.Dock="Right" Background="Transparent" BorderThickness="0"
                                Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}, Mode=FindAncestor}, Path=DataContext.RemoveSetCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=DataContext}">
                            <Image Source="pack:DockPanel//application:,,,/DevExpress.Images.v21.2;component/Office2013/Actions/Cancel_16x16.png"/>
                        </Button>
                        <Button Margin="3" DockPanel.Dock="Right" Command="{Binding AddRuleCommand}">Добавить правило</Button>
                        <Button Margin="3" DockPanel.Dock="Right" Command="{Binding AddSetCommand}">Добавить набор</Button>
                        <ComboBox Margin="3" DockPanel.Dock="Left" ItemsSource="{Binding Evaluators, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding SelectedEvaluator, UpdateSourceTrigger=PropertyChanged}" HorizontalAlignment="Stretch">
                            <ComboBox.ItemTemplate>
                                <DataTemplate DataType="{x:Type vm:EvaluatorViewModel}">
                                    <TextBlock Text="{Binding SetEvaluator.Message, Mode=OneWay}"/>
                                </DataTemplate>
                            </ComboBox.ItemTemplate>
                        </ComboBox>
                    </DockPanel>
                    <ListBox BorderThickness="0" BorderBrush="Transparent" Focusable="False" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" Grid.Row="1" ItemsSource="{Binding Criterions, UpdateSourceTrigger=PropertyChanged}"/>
                </Grid>
            </Border>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:RuleViewModel}">
            <DockPanel LastChildFill="True" HorizontalAlignment="Stretch">
                <ComboBox Width="200" Margin="3" DockPanel.Dock="Left" ItemsSource="{Binding CategoriesInfo.Parameters}" SelectedItem="{Binding SelectedParameter}">
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding ParameterSelectionChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                    <ComboBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type vm:ParameterViewModel}">
                            <TextBlock Text="{Binding Name}"></TextBlock>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                </ComboBox>
                <Button Margin="3" Width="16" Background="Transparent" BorderBrush="Transparent" BorderThickness="0" DockPanel.Dock="Right"
                        Command="{Binding RelativeSource={RelativeSource AncestorType={x:Type ListBox}, Mode=FindAncestor}, Path=DataContext.RemoveRuleCommand}"
                                CommandParameter="{Binding RelativeSource={RelativeSource Mode=Self}, Path=DataContext}">
                    <Image Source="pack://application:,,,/DevExpress.Images.v21.2;component/Office2013/Actions/Close_16x16.png"/>
                </Button>
                <ComboBox Width="100" Margin="3" DockPanel.Dock="Left" 
                          ItemsSource="{Binding RuleEvaluators, UpdateSourceTrigger=PropertyChanged}" 
                          SelectedItem="{Binding SelectedRuleEvaluator, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate DataType="{x:Type vm:RuleEvaluatorViewModel}">
                            <TextBlock Text="{Binding Name}"/>
                        </DataTemplate>
                    </ComboBox.ItemTemplate>
                    <i:Interaction.Triggers>
                        <i:EventTrigger EventName="SelectionChanged">
                            <i:InvokeCommandAction Command="{Binding EvaluatorSelectionChangedCommand}"/>
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
                <Grid DockPanel.Dock="Right" Margin="3">
                    <ComboBox SelectedItem="{Binding SelectedValue, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding Values}"
                          DisplayMemberPath="DisplayValue" Text="{Binding StringValue}" DropDownOpened="ComboBox_DropDownOpened" KeyDown="ComboBox_KeyDown" >
                        <ComboBox.ItemsPanel>
                            <ItemsPanelTemplate>
                                <VirtualizingStackPanel IsVirtualizing="True" VirtualizingStackPanel.VirtualizationMode="Recycling" />
                            </ItemsPanelTemplate>
                        </ComboBox.ItemsPanel>
                        <ComboBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type model:ParamValueViewModel}">
                                <TextBlock Text="{Binding ParamValue.DisplayValue}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                        <ComboBox.Style>
                            <Style TargetType="{x:Type ComboBox}">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding IsValueEditable}" Value="True">
                                        <Setter Property="IsEditable" Value="True"></Setter>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding IsValueEditable}" Value="False">
                                        <Setter Property="IsEditable" Value="False"></Setter>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ComboBox.Style>
                    </ComboBox>
                </Grid>

            </DockPanel>
        </DataTemplate>
    </UserControl.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Border Margin="5" Grid.Row="0" Style="{StaticResource border}">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <DockPanel Grid.Row="0" HorizontalAlignment="Stretch">
                    <Button Margin="3" DockPanel.Dock="Right" Command="{Binding AddRuleCommand}">Добавить правило</Button>
                    <Button Margin="3" DockPanel.Dock="Right" Command="{Binding AddSetCommand}">Добавить набор</Button>
                    <ComboBox Margin="3" DockPanel.Dock="Left" ItemsSource="{Binding Evaluators}" SelectedItem="{Binding SelectedEvaluator}" HorizontalAlignment="Stretch">
                        <ComboBox.ItemTemplate>
                            <DataTemplate DataType="{x:Type vm:EvaluatorViewModel}">
                                <TextBlock Text="{Binding SetEvaluator.Message, Mode=OneWay}"/>
                            </DataTemplate>
                        </ComboBox.ItemTemplate>
                    </ComboBox>
                </DockPanel>
                <ListBox x:Name="_lbCriterions" Grid.Row="1" HorizontalAlignment="Stretch" HorizontalContentAlignment="Stretch" 
                 ItemsSource="{Binding Criterions, UpdateSourceTrigger=PropertyChanged}" Focusable="False" BorderBrush="Transparent">
                </ListBox>
            </Grid>
        </Border>
    </Grid>
</UserControl>
