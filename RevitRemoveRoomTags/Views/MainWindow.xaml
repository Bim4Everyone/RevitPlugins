<base:PlatformWindow
    x:Class="RevitRemoveRoomTags.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"

    xmlns:base="clr-namespace:dosymep.WPF.Views"
    xmlns:local="clr-namespace:RevitRemoveRoomTags.Views"
    xmlns:vms="clr-namespace:RevitRemoveRoomTags.ViewModels"

    mc:Ignorable="d"
    WindowStartupLocation="CenterOwner"
    
    Title="MainWindow"
    MinHeight="450" MinWidth="765"
    Height="450" Width="765"
    
    Validation.Error="Window_Error"
    
    d:DataContext="{d:DesignInstance vms:MainViewModel, IsDesignTimeCreatable=False}">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction
                Command="{Binding LoadViewCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <local:InverseAndBooleansToBooleanConverter x:Key="inverseAndBooleansToBooleanConverter"/>
        
        <TextBlock x:Key="TextBlockToolTip" 
                   Text="Плагин позволяет переносить или удалять совпадающие марки помещений на разных видах.&#10;Совпадающими считаются те марки, которые имеют абсолютно одинаковые координаты на виде, например, когда вы произвели копирование марок с одного вида на другой.&#10;Принцип работы:&#10;- выберите виды через диспетчер проекта, а затем запустите плагин;&#10;- в строке задания выберите марки на одном из видов;&#10;- если вы хотите переместить совпадающие марки, то введите значения смещений, отличные от нуля;&#10;- если вы хотите удалить совпадающие марки, то поставьте галочку в столбце &quot;Удалить?&quot;;&#10;- чтобы добавить еще одну строку задания нажмите кнопки &quot;Добавить задачу&quot;&#10;- чтобы удалить лишнюю задачу, выберите ее в списке и нажмите кнопку &quot;Удалить задачу&quot;;&#10;- запустите плагин нажав кнопку &quot;Ок&quot;;&#10;- плагин переберет все выбранные до запуска виды, найдет на них марки помещений и, если они совпадают по координатам с марками из заданий, произведет с ними манипуляции."
                   TextWrapping="Wrap"
                   Width="400"
                   TextAlignment="Justify"
                   FlowDirection="LeftToRight"
                   ToolTipService.InitialShowDelay="500"
                   ToolTipService.ShowDuration="40000"
                   ToolTipService.BetweenShowDelay="1" />

        <ControlTemplate x:Key="validationFailed">
            <StackPanel Orientation="Horizontal">
                <Border
                    BorderBrush="Red" 
                    BorderThickness="2">
                    <AdornedElementPlaceholder />
                </Border>
                <TextBlock 
                    Foreground="Red"
                    FontSize="26" 
                    Margin="3 0"
                    Text="!"/>
            </StackPanel>
        </ControlTemplate>


        <Style TargetType="TextBox">
            <Style.Triggers>
                <Trigger Property="Validation.HasError" Value="True">
                    <Setter
                        Property="ToolTip"
                        Value="{Binding RelativeSource={RelativeSource Self}, Path=(Validation.Errors)[0].ErrorContent}" />
                    <Setter Property="Foreground" Value="Red" />
                </Trigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="ErrorTextBlock" TargetType="TextBlock">
            <Setter Property="Text" 
                    Value="{Binding 
                         RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, 
                         Path=ValidationErrors[0].ErrorContent}"/>
            
            <Style.Triggers>
                <DataTrigger Binding="{Binding 
                         RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, 
                         Path=ValidationErrors.Count}" 
                         Value="0">
                    <Setter Property="Text" Value="{Binding ErrorText}"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>


        <Style x:Key="AcceptViewButton" TargetType="Button">
            <Setter Property="IsEnabled" Value="False"/>
            <Style.Triggers>
                <DataTrigger Binding="{Binding 
                             RelativeSource={RelativeSource FindAncestor, AncestorType={x:Type Window}}, 
                             Path=ValidationErrors.Count}" 
                             Value="0">
                    <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>
            </Style.Triggers>
        </Style>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>


        <DockPanel>
            <TextBlock
                DockPanel.Dock="Left"
                Margin="10 5 5 5"
                VerticalAlignment="Center"
                Text="Выбрано видов до запуска плагина: " />

            <TextBlock
                DockPanel.Dock="Left"
                Margin="5"
                VerticalAlignment="Center"
                Text="{Binding Path=SelectedViews.Count}" />

            <CheckBox
                DockPanel.Dock="Left"
                Margin="100 5 5 5"
                VerticalContentAlignment="Center"
                Content="Открыть выбранные виды"
                IsChecked="{Binding Path=NeedOpenSelectedViews}"/>
            
            <Grid DockPanel.Dock="Right">
                <Rectangle 
                    HorizontalAlignment="Right"
                    Margin="10"
                    Fill="WhiteSmoke"
                    Stroke="Black"
                    Width="20"
                    Height="20"
                    RadiusX="8"
                    RadiusY="8"/>
                <TextBlock
                    HorizontalAlignment="Right"
                    Margin="10 10 18.5 10"
                    VerticalAlignment="Center"
                    FontSize="16"
                    Text="i" FontFamily="Arial">
                    <TextBlock.ToolTip>
                        <StaticResource ResourceKey="TextBlockToolTip" />
                    </TextBlock.ToolTip>
                </TextBlock>
            </Grid>
        </DockPanel>


        <TextBlock
            Grid.Row="1"
            Margin="10 5 5 5"
            VerticalAlignment="Center"
            Text="Задачи для работы: " />

        <ListView 
            x:Name="test0"
            Grid.Row="2"
            Margin="10"
            ScrollViewer.VerticalScrollBarVisibility="Visible"
            ScrollViewer.CanContentScroll="False"
            ItemsSource="{Binding Path=RoomTagTasks, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"
            SelectedItem="{Binding Path=SelectedRoomTagTask}"
            SelectionMode="Single">
            <ListView.View>
                <GridView>
                    <GridViewColumn Header="Выбор марок" Width="180">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <Button
                                    Margin="3"
                                    Width="155"
                                    Height="30"
                                    HorizontalAlignment="Center"
                                    Content="Выбрать"
                                    FontSize="14"
                                    Click="ButtonCancel_Click"
                                    Command="{Binding Path=DataContext.SelectRoomTagsCommand, 
                                        RelativeSource={RelativeSource AncestorType={x:Type Window}}}"
                                    CommandParameter="{Binding Path=DataContext, RelativeSource={RelativeSource AncestorType=ListViewItem}}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn 
                        Header="Выбрано:" 
                        Width="80"
                        DisplayMemberBinding="{Binding RoomTags.Count}"/>

                    <GridViewColumn 
                        Header="Смещение по X"
                        Width="180">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox 
                                    Margin="5"
                                    Width="155"
                                    Height="30"
                                    HorizontalAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Validation.ErrorTemplate="{StaticResource validationFailed}"
                                    
                                    Text="{Binding 
                                        Path=XOffset,
                                        UpdateSourceTrigger=PropertyChanged, 
                                        ValidatesOnDataErrors=True, 
                                        NotifyOnValidationError=True}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn
                        Header="Смещение по Y" 
                        Width="180">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBox
                                    Margin="5"
                                    Width="155"
                                    Height="30"
                                    HorizontalAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    Validation.ErrorTemplate="{StaticResource validationFailed}"
                                    
                                    Text="{Binding 
                                        Path=YOffset,
                                        UpdateSourceTrigger=PropertyChanged, 
                                        ValidatesOnDataErrors=True, 
                                        NotifyOnValidationError=True}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <GridViewColumn Header="Удалять?" Width="80">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <CheckBox 
                                    HorizontalAlignment="Center"
                                    VerticalContentAlignment="Center"
                                    IsChecked="{Binding Path=RemoveTags}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>

        <StackPanel
            Grid.Row="3"
            Height="45"
            Orientation="Horizontal"
            HorizontalAlignment="Right">

            <Button
                Margin="10 0 10 20"
                Width="150"
                ToolTip="Добавить пустую задачу в список задач"
                Content="Добавить задачу"
                Command="{Binding Path=AddTaskCommand}"/>

            <Button
                Margin="10 0 10 20"
                Width="150"
                ToolTip="Удалить выбранную задачу в списке задач"
                Content="Удалить задачу"
                Command="{Binding Path=DeleteTaskCommand}"/>
        </StackPanel>
        

        <StackPanel
            Grid.Row="4"
            Height="45"
            Orientation="Horizontal"
            HorizontalAlignment="Right">
            <TextBlock
                Margin="10"
                Foreground="Orange"
                VerticalAlignment="Center"
                Style="{StaticResource ErrorTextBlock}"/>

            <Button
                Margin="10"
                Width="80"
                Content="ОК"
                Click="ButtonOk_Click"
                Style="{StaticResource AcceptViewButton}"
                Command="{Binding Path=AcceptViewCommand}"/>

            <Button
                Margin="10"
                Width="80"
                Content="Отмена"
                Click="ButtonCancel_Click">
            </Button>
        </StackPanel>
    </Grid>
</base:PlatformWindow>