<core:WpfUIPlatformWindow
    x:Class="RevitReinforcementCoefficient.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"

    xmlns:base="clr-namespace:dosymep.WPF.Views"
    xmlns:local="clr-namespace:RevitReinforcementCoefficient.Views"
    xmlns:vms="clr-namespace:RevitReinforcementCoefficient.ViewModels"
    xmlns:converters="clr-namespace:dosymep.WPF.Converters"
    xmlns:core="clr-namespace:dosymep.WpfUI.Core"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:me="clr-namespace:dosymep.WpfCore.MarkupExtensions;assembly=dosymep.WpfCore"
    
    mc:Ignorable="d"
    WindowStartupLocation="CenterOwner"
    Title="Расчет коэффициента армирования"
    
    Height="600" 
    Width="1250"
    
    MinHeight="400" 
    MinWidth="1250"
    
    Background="{ui:ThemeResource LayerOnAcrylicFillColorDefaultBrush }"
    
    d:DataContext="{d:DesignInstance vms:MainViewModel, IsDesignTimeCreatable=False}">

    <Window.Resources>
        <Style
            TargetType="Border">
            <Setter
                Property="Background"
                Value="{ui:ThemeResource LayerOnAcrylicFillColorDefaultBrush}" />
            <Setter
                Property="BorderBrush"
                Value="{ui:ThemeResource TextFillColorDisabledBrush}" />
            <Setter
                Property="BorderThickness"
                Value="1" />
        </Style>

    </Window.Resources>

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction
                Command="{Binding LoadViewCommand}"
                CommandParameter="{Binding 
                    RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*" />
            <ColumnDefinition Width="*" />
        </Grid.ColumnDefinitions>

        <ui:TitleBar
            Grid.Row="0" Grid.ColumnSpan="2" 
            Title="{me:LocalizationSource MainWindow.Title}"
            FontSize="16"/>

        <Border
            Grid.Row="1"
            Grid.Column="0"
            Margin="10 5 5 5"
            CornerRadius="5">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition 
                        Height="*" />
                    <RowDefinition 
                        Height="*" />
                </Grid.RowDefinitions>

                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto" />
                    <ColumnDefinition Width="*" />
                </Grid.ColumnDefinitions>

                <ui:TextBlock
                    Grid.Row="0"
                    Grid.Column="0"
                    Margin="15 7"
                    VerticalAlignment="Center"
                    Text="Выберите комплект документации:" />

                <ComboBox
                    Grid.Row="0"
                    Grid.Column="1"
                    Margin="7"
                    MinWidth="250"
                    HorizontalAlignment="Right"
                    VerticalContentAlignment="Center"
                    ItemsSource="{Binding Path=DockPackages}"
                    SelectedItem="{Binding Path=SelectedDockPackage, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock
                                Text="{Binding Converter={converters:NullToStringConverter}}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>

                    <i:Interaction.Triggers>
                        <i:EventTrigger
                            EventName="SelectionChanged">
                            <i:InvokeCommandAction
                                Command="{Binding UpdateFilteringCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>

                <ui:TextBlock
                    Grid.Row="1"
                    Grid.Column="0"
                    Margin="15 7"
                    VerticalAlignment="Center"
                    Text="Выберите секцию:" />

                <ComboBox
                    Grid.Row="1"
                    Grid.Column="1"
                    Margin="7"
                    MinWidth="250"
                    HorizontalAlignment="Right"
                    VerticalContentAlignment="Center"
                    ItemsSource="{Binding Path=ElemSections}"
                    SelectedItem="{Binding Path=SelectedElemSection, UpdateSourceTrigger=PropertyChanged}">
                    <ComboBox.ItemTemplate>
                        <DataTemplate>
                            <TextBlock
                                Text="{Binding Converter={converters:NullToStringConverter}}" />
                        </DataTemplate>
                    </ComboBox.ItemTemplate>

                    <i:Interaction.Triggers>
                        <i:EventTrigger
                            EventName="SelectionChanged">
                            <i:InvokeCommandAction
                                Command="{Binding UpdateFilteringCommand}" />
                        </i:EventTrigger>
                    </i:Interaction.Triggers>
                </ComboBox>
            </Grid>
        </Border>

        <Border
            Grid.Row="1"
            Grid.Column="1"
            Margin="5 5 10 5"
            CornerRadius="5">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition
                        Height="*" />
                    <RowDefinition
                        Height="*" />
                </Grid.RowDefinitions>

                <ui:TextBlock
                    Grid.Row="0"
                    Margin="15 5"
                    VerticalAlignment="Center"
                    Text="Коэффициент армирования может рассчитываться отдельно для каждого типа"
                    TextWrapping="WrapWithOverflow" />

                <CheckBox
                    Grid.Row="1"
                    Margin="5"
                    VerticalAlignment="Center"
                    IsChecked="{Binding Path=СalcСoefficientOnAverage}"
                    Content="Считать коэффициент армирования усреднённо" />
            </Grid>
        </Border>

        <Border
            Grid.Row="2"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="10 5 10 5"
            CornerRadius="5">

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*" />
                    <RowDefinition Height="Auto" />
                </Grid.RowDefinitions>

                <ui:DataGrid
                    Margin="10"
                    SelectionMode="Extended"
                    SelectionUnit="FullRow"
                    AutoGenerateColumns="False"
                    CanUserResizeRows="False"
                    CanUserSortColumns="False"
                    CanUserReorderColumns="False"
                    ItemsSource="{Binding 
                        Path=DesignTypesList.DesignTypes, 
                        UpdateSourceTrigger=PropertyChanged, 
                        Mode=TwoWay}">

                    <DataGrid.Columns>
                        <DataGridCheckBoxColumn
                            Binding="{Binding Path=IsCheck, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                            Header="Выбор" />

                        <DataGridTextColumn
                            Binding="{Binding Path=TypeName, Converter={converters:NullToStringConverter}}"
                            Header="Тип конструкции"
                            IsReadOnly="True" />

                        <DataGridTextColumn
                            Binding="{Binding Path=DocPackage, Converter={converters:NullToStringConverter}}"
                            Header="Комплект"
                            IsReadOnly="True" />

                        <DataGridTextColumn
                            Binding="{Binding Path=ElemSection, Converter={converters:NullToStringConverter}}"
                            Header="Комплект"
                            IsReadOnly="True" />

                        <DataGridTextColumn
                            Binding="{Binding Path=AboveZero, Converter={converters:BoolToStringConverter}}"
                            Header="Выше нуля?"
                            IsReadOnly="True" />

                        <DataGridTextColumn
                            Binding="{Binding Formworks.Count}"
                            Header="Кол-во опалубки"
                            IsReadOnly="True" />

                        <DataGridTextColumn
                            Binding="{Binding Rebars.Count}"
                            Header="Кол-во арм-я"
                            IsReadOnly="True" />

                        <DataGridTextColumn
                            Binding="{Binding FormworkVolume}"
                            Header="Объем бетона"
                            IsReadOnly="True" />

                        <DataGridTextColumn
                            Binding="{Binding RebarMass}"
                            Header="Масса арм-я"
                            IsReadOnly="True" />

                        <DataGridTextColumn
                            Binding="{Binding RebarCoef}"
                            Header="Коэффициент арм-я"
                            IsReadOnly="True" />
                    </DataGrid.Columns>

                    <!--<DataGrid.RowStyle>
                        <Style
                            TargetType="{x:Type DataGridRow}">
                            <Setter
                                Property="IsSelected"
                                Value="{Binding Path=IsCheck, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}" />
                        </Style>
                    </DataGrid.RowStyle>-->
                </ui:DataGrid>

                <!--<ui:ListView
    Grid.Row="2" 
    Grid.Column="0"
    Grid.ColumnSpan="2"
    Margin="10"
    ScrollViewer.VerticalScrollBarVisibility="Visible"
    ScrollViewer.CanContentScroll="False"
    ItemsSource="{Binding 
        Path=DesignTypesList.DesignTypes, 
        UpdateSourceTrigger=PropertyChanged, 
        Mode=TwoWay}"
    SelectionMode="Multiple">
    <ui:ListView.View>
        <GridView>
            <GridViewColumn Header="Выбор">
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <CheckBox IsChecked="{Binding IsCheck}"/>
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>

            <GridViewColumn Header="Тип конструкции" Width="140">
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <ui:TextBlock Text="{Binding Path=TypeName,
                            Converter={converters:NullToStringConverter}}"/>
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>

            <GridViewColumn Header="Комплект" Width="80">
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <ui:TextBlock Text="{Binding Path=DocPackage, 
                            Converter={converters:NullToStringConverter}}"/>
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>

            <GridViewColumn Header="Секция" Width="110">
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <ui:TextBlock Text="{Binding Path=ElemSection, 
                            Converter={converters:NullToStringConverter}}"/>
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>

            <GridViewColumn Header="Выше нуля?" Width="90">
                <GridViewColumn.CellTemplate>
                    <DataTemplate>
                        <ui:TextBlock Text="{Binding Path=AboveZero,
                            Converter={converters:BoolToStringConverter}}"/>
                    </DataTemplate>
                </GridViewColumn.CellTemplate>
            </GridViewColumn>

            <GridViewColumn Header="Кол-во опалубки" 
                            Width="130" DisplayMemberBinding="{Binding Formworks.Count}"/>
            <GridViewColumn Header="Кол-во арм-я" 
                            Width="110" DisplayMemberBinding="{Binding Rebars.Count}"/>
            <GridViewColumn Header="Объем бетона" 
                            Width="110" DisplayMemberBinding="{Binding FormworkVolume}"/>
            <GridViewColumn Header="Масса арм-я" 
                            Width="110" DisplayMemberBinding="{Binding RebarMass}"/>
            <GridViewColumn Header="Коэффициент арм-я" 
                            Width="140" DisplayMemberBinding="{Binding RebarCoef}"/>
        </GridView>
    </ui:ListView.View>

<ListView.ItemContainerStyle>
        <Style TargetType="{x:Type ListBoxItem}">
            <Setter Property="IsSelected" Value="{Binding Path=IsCheck, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}"/>

            <Style.Triggers>
                <Trigger Property="IsSelected" Value="True">
                    <Setter Property="Background" 
                            Value="WhiteSmoke" />
                    <Setter Property="BorderBrush"
                            Value="LightGray" />
                </Trigger>                        
                <Trigger Property="IsSelected" Value="False">
                    <Setter Property="Background" 
                            Value="{x:Null}" />
                    <Setter Property="BorderBrush"
                            Value="LightGray" />
                </Trigger>
            </Style.Triggers>
        </Style>
    </ListView.ItemContainerStyle>
    
</ui:ListView>-->

                <StackPanel
                    Grid.Row="1"
                    Orientation="Horizontal"
                    HorizontalAlignment="Left"
                    VerticalAlignment="Bottom">

                    <ui:Button
                        Margin="10"
                        Width="140"
                        Content="Выбрать все"
                        Command="{Binding Path=SelectAllVisibleCommand}" />

                    <ui:Button
                        Margin="10"
                        Width="140"
                        Content="Отменить выбор"
                        Command="{Binding Path=UnselectAllVisibleCommand}" />
                </StackPanel>

                <StackPanel
                    Grid.Row="1"
                    Orientation="Horizontal"
                    HorizontalAlignment="Right">

                    <ui:Button
                        Margin="10"
                        Width="150"
                        Content="Показать опалубку"
                        Command="{Binding Path=ShowFormworkElementsCommand}" />

                    <ui:Button
                        Margin="10"
                        Width="150"
                        Content="Показать арматуру"
                        Command="{Binding Path=ShowRebarElementsCommand}" />
                </StackPanel>
            </Grid>
        </Border>

        
        <StackPanel
            Grid.Row="3"
            Grid.Column="0"
            Grid.ColumnSpan="2"
            Margin="5 0"
            Orientation="Horizontal"
            HorizontalAlignment="Right">
            <ui:TextBlock
                Margin="10"
                Foreground="Orange"
                VerticalAlignment="Center"
                Text="{Binding ErrorText}" />

            <ui:Button
                Margin="10"
                Width="100"
                Content="Рассчитать"
                Command="{Binding GetInfoCommand}" />

            <ui:Button
                Margin="10"
                Width="100"
                Content="Записать"
                IsDefault="True"
                Click="ButtonOk_Click"
                Command="{Binding AcceptViewCommand}" />

            <ui:Button
                Margin="10"
                Width="80"
                Content="Отмена"
                IsCancel="True"
                Click="ButtonCancel_Click" />
        </StackPanel>
    </Grid>
</core:WpfUIPlatformWindow>
