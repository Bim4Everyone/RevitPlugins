<core:WpfUIPlatformWindow
    x:Class="RevitRefreshLinks.Views.FilesExplorerWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:core="clr-namespace:dosymep.WpfUI.Core"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:me="clr-namespace:dosymep.WpfCore.MarkupExtensions;assembly=dosymep.WpfCore"
    xmlns:local="clr-namespace:RevitRefreshLinks.Views"
    xmlns:res="clr-namespace:RevitRefreshLinks.Resources"
    xmlns:vms="clr-namespace:RevitRefreshLinks.ViewModels"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:converters="clr-namespace:dosymep.WpfCore.Converters;assembly=dosymep.WpfCore"
    mc:Ignorable="d"
    WindowStartupLocation="CenterOwner"
    Height="450"
    Width="800"
    MinHeight="400"
    MinWidth="600"
    d:DataContext="{d:DesignInstance vms:FilesExplorerViewModel, IsDesignTimeCreatable=False}">
    <i:Interaction.Triggers>
        <i:EventTrigger
            EventName="Loaded">
            <i:InvokeCommandAction
                Command="{Binding LoadViewCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="Styles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <ui:SymbolRegular
                x:Key="DirectoryIcon">Folder24</ui:SymbolRegular>
            <ui:SymbolRegular
                x:Key="FileIcon">Building24</ui:SymbolRegular>
            <converters:BoolToObjectConverter
                x:Key="IsDirectoryToIconConverter"
                TrueValue="{StaticResource DirectoryIcon}"
                FalseValue="{StaticResource FileIcon}" />
            <res:BoolToSelectionModeConverter
                x:Key="BoolToSelectionModeConverter" />
            <res:FileSizeConverter
                x:Key="FileSizeConverter" />
            <Style
                TargetType="DockPanel"
                x:Key="ProgressPanel">
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding DataContext.AnyCmdIsExecuting,
                        RelativeSource={RelativeSource AncestorType=Window}}"
                        Value="True">
                        <Setter
                            Property="Visibility"
                            Value="Visible" />
                    </DataTrigger>
                </Style.Triggers>
                <Setter
                    Property="Visibility"
                    Value="Hidden" />
            </Style>
            <Style
                TargetType="Border"
                x:Key="HiddenOnExecutingBorder"
                BasedOn="{StaticResource CustomBorder}">
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding DataContext.AnyCmdIsExecuting,
                        RelativeSource={RelativeSource AncestorType=Window}}"
                        Value="True">
                        <Setter
                            Property="Visibility"
                            Value="Hidden" />
                    </DataTrigger>
                </Style.Triggers>
                <Setter
                    Property="Visibility"
                    Value="Visible" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>
    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition
                Height="Auto" />
            <RowDefinition
                Height="Auto" />
            <RowDefinition
                Height="*" />
            <RowDefinition
                Height="Auto" />
        </Grid.RowDefinitions>

        <ui:TitleBar
            Grid.Row="0"
            Title="{Binding Title}" />

        <Border
            Grid.Row="1"
            Style="{StaticResource CustomBorder}">
            <DockPanel>
                <ui:Button
                    CornerRadius="4 0 0 4"
                    Content="{ui:SymbolIcon Symbol=ArrowLeft20}"
                    Command="{Binding OpenPreviousFolderCommand}" />
                <ui:Button
                    CornerRadius="0"
                    Content="{ui:SymbolIcon Symbol=ArrowRight20}"
                    Command="{Binding OpenNextFolderCommand}" />
                <ui:Button
                    CornerRadius="0"
                    Content="{ui:SymbolIcon Symbol=ArrowUp20}"
                    Command="{Binding OpenParentFolderCommand}" />
                <ui:Button
                    CornerRadius="0 4 4 0"
                    Content="{ui:SymbolIcon Symbol=Home20}"
                    Command="{Binding OpenRootFolderCommand}" />
                <DockPanel
                    LastChildFill="True">
                    <DockPanel
                        HorizontalAlignment="Right"
                        DockPanel.Dock="Right">
                        <ui:Button
                            DockPanel.Dock="Right"
                            Content="{ui:SymbolIcon Symbol=ArrowSync20}"
                            Command="{Binding UpdateViewCommand}" />
                    </DockPanel>
                    <ui:TextBlock
                        Margin="5 0 0 0"
                        VerticalAlignment="Center"
                        TextAlignment="Left"
                        HorizontalAlignment="Left"
                        FontWeight="SemiBold"
                        Text="{Binding ActiveDirectory.FullName}" />
                </DockPanel>
            </DockPanel>
        </Border>

        <DockPanel
            Grid.Row="2"
            Style="{StaticResource ProgressPanel}"
            VerticalAlignment="Center"
            HorizontalAlignment="Center">
            <ProgressBar
                IsIndeterminate="True">
            </ProgressBar>
        </DockPanel>

        <Border
            Grid.Row="2"
            Style="{StaticResource HiddenOnExecutingBorder}">
            <ui:ListView
                VerticalAlignment="Stretch"
                ScrollViewer.VerticalScrollBarVisibility="Auto"
                ScrollViewer.HorizontalScrollBarVisibility="Auto"
                BorderThickness="0"
                ItemsSource="{Binding ActiveDirectory.Content}"
                SelectionMode="{Binding MultiSelect, Converter={StaticResource BoolToSelectionModeConverter}}"
                res:ListViewAttachedProperties.SelectedItems="{Binding SelectedItems}"
                SelectedItem="{Binding SelectedItem}">
                <i:Interaction.Behaviors>
                    <res:SelectorDoubleClickBehavior
                        Command="{Binding OpenFolderCommand}" />
                    <res:ListViewHorizontalScrollBehavior />
                </i:Interaction.Behaviors>
                <ui:ListView.View>
                    <GridView
                        ColumnHeaderContainerStyle="{StaticResource UiGridViewColumnHeaderStyle}">
                        <GridViewColumn
                            Width="Auto"
                            HeaderContainerStyle="{StaticResource CustomNoResizableColumnHeader}">
                            <GridViewColumn.CellTemplate>
                                <DataTemplate>
                                    <ui:SymbolIcon
                                        Symbol="{Binding IsDirectory, Converter={StaticResource IsDirectoryToIconConverter}}" />
                                </DataTemplate>
                            </GridViewColumn.CellTemplate>
                        </GridViewColumn>
                        <GridViewColumn
                            Width="600"
                            Header="{DynamicResource RsOpenFileWindow.List.Name}"
                            DisplayMemberBinding="{Binding Name}" />
                        <GridViewColumn
                            Width="100"
                            Header="{DynamicResource RsOpenFileWindow.List.Size}"
                            DisplayMemberBinding="{Binding Length, Converter={StaticResource FileSizeConverter}}" />
                    </GridView>
                </ui:ListView.View>
            </ui:ListView>
        </Border>

        <StackPanel
            Grid.Row="3"
            Orientation="Horizontal"
            HorizontalAlignment="Right">

            <ui:TextBlock
                Margin="10"
                Style="{StaticResource CustomErrorText}"
                Text="{Binding ErrorText}" />

            <ui:Button
                Width="80"
                Margin="10"
                Appearance="Info"
                Click="ButtonOk_Click"
                Content="{DynamicResource AllWindow.Ok}"
                Command="{Binding AcceptViewCommand}" />

            <ui:Button
                Width="80"
                Margin="10"
                IsCancel="True"
                Click="ButtonCancel_Click"
                Content="{DynamicResource AllWindow.Cancel}" />
        </StackPanel>
    </Grid>
</core:WpfUIPlatformWindow>
