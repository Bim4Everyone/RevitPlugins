<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:local="clr-namespace:RevitCreateViewSheet.Views"
    xmlns:controls="clr-namespace:Wpf.Ui.Controls;assembly=Wpf.Ui">
    <ResourceDictionary.MergedDictionaries>
        <ResourceDictionary
            Source="pack://application:,,,/Wpf.Ui;component/Controls/DataGrid/DataGrid.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Wpf.Ui;component/Controls/CheckBox/CheckBox.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Wpf.Ui;component/Controls/ComboBox/ComboBox.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Wpf.Ui;component/Controls/TextBox/TextBox.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Wpf.Ui;component/Controls/GridView/GridViewHeaderRowIndicator.xaml" />
        <ResourceDictionary
            Source="pack://application:,,,/Wpf.Ui;component/Resources/Typography.xaml" />
    </ResourceDictionary.MergedDictionaries>
    <!--
    У стандартного стиля DefaultUiDataGridStyle с включенным CanUserResizeColumns не работает изменение ширины столбцов. 
    Скорее всего проблема в ColumnHeaderGripperStyle в сеттере для Template
    https://github.com/lepoco/wpfui/blob/776d9c79391a3d5d4505561dd38d5463148c55b3/src/Wpf.Ui/Controls/DataGrid/DataGrid.xaml#L496
    -->
    <Style
        x:Key="CustomResizableDataGridStyle"
        TargetType="ui:DataGrid"
        BasedOn="{StaticResource DefaultUiDataGridStyle}">
        <Setter
            Property="CanUserResizeColumns"
            Value="True" />
        <Setter
            Property="ColumnHeaderStyle"
            Value="{DynamicResource CustomDataGridColumnHeaderStyle}" />
    </Style>
    <Style
        x:Key="CustomColumnHeaderGripperStyle"
        TargetType="{x:Type Thumb}">
        <Setter
            Property="Width"
            Value="5" />
        <Setter
            Property="Background"
            Value="Transparent" />
        <Setter
            Property="VerticalAlignment"
            Value="Stretch" />
        <Setter
            Property="Padding"
            Value="4,0" />
        <Setter
            Property="HorizontalContentAlignment"
            Value="Center" />
        <Setter
            Property="VerticalContentAlignment"
            Value="Center" />
        <Setter
            Property="Cursor"
            Value="SizeWE" />
        <Setter
            Property="OverridesDefaultStyle"
            Value="True" />
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type Thumb}">
                    <Border
                        x:Name="Border"
                        Background="{TemplateBinding Background}"
                        BorderBrush="{TemplateBinding BorderBrush}"
                        BorderThickness="{TemplateBinding BorderThickness}">
                        <Rectangle
                            x:Name="Thumb"
                            Width="4"
                            Height="16"
                            Margin="{TemplateBinding Padding}"
                            RadiusX="2"
                            RadiusY="2" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="HorizontalAlignment"
                            Value="Left">
                            <Setter
                                TargetName="Border"
                                Property="CornerRadius"
                                Value="4,0,0,4" />
                        </Trigger>
                        <Trigger
                            Property="HorizontalAlignment"
                            Value="Right">
                            <Setter
                                TargetName="Border"
                                Property="CornerRadius"
                                Value="0,4,4,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
    <Style
        x:Key="CustomDataGridColumnHeaderStyle"
        BasedOn="{StaticResource DefaultUiDataGridColumnHeaderStyle}"
        TargetType="DataGridColumnHeader">
        <Setter
            Property="Template">
            <Setter.Value>
                <ControlTemplate
                    TargetType="{x:Type DataGridColumnHeader}">
                    <Grid>
                        <Border
                            x:Name="HeaderBorder"
                            Padding="{TemplateBinding Padding}"
                            Background="{TemplateBinding Background}"
                            BorderBrush="{TemplateBinding BorderBrush}"
                            BorderThickness="{TemplateBinding BorderThickness}"
                            CornerRadius="{DynamicResource ControlCornerRadius}">
                            <Grid
                                HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                                VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                                IsSharedSizeScope="True">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition
                                        x:Name="FirstColumn"
                                        Width="*" />
                                    <ColumnDefinition
                                        x:Name="SecondColumn"
                                        Width="Auto" />
                                </Grid.ColumnDefinitions>
                                <ContentPresenter
                                    Grid.Column="0"
                                    x:Name="ContentPresenter"
                                    SnapsToDevicePixels="{TemplateBinding SnapsToDevicePixels}" />
                                <controls:SymbolIcon
                                    Grid.Column="1"
                                    x:Name="SortIcon"
                                    Margin="4,0,0,0"
                                    RenderTransformOrigin="0.5, 0.5"
                                    Symbol="ArrowSortUp24">
                                    <controls:SymbolIcon.RenderTransform>
                                        <RotateTransform
                                            Angle="0" />
                                    </controls:SymbolIcon.RenderTransform>
                                </controls:SymbolIcon>
                            </Grid>
                        </Border>

                        <Thumb
                            x:Name="PART_LeftHeaderGripper"
                            HorizontalAlignment="Left"
                            Style="{StaticResource CustomColumnHeaderGripperStyle}" />
                        <Thumb
                            x:Name="PART_RightHeaderGripper"
                            HorizontalAlignment="Right"
                            Style="{StaticResource CustomColumnHeaderGripperStyle}" />
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger
                            Property="IsMouseOver"
                            Value="True">
                            <Setter
                                TargetName="HeaderBorder"
                                Property="Background"
                                Value="{DynamicResource ListViewItemBackgroundPointerOver}" />
                        </Trigger>
                        <Trigger
                            Property="IsPressed"
                            Value="True">
                            <Setter
                                TargetName="HeaderBorder"
                                Property="Background"
                                Value="{DynamicResource SubtleFillColorTertiaryBrush}" />
                        </Trigger>
                        <Trigger
                            Property="IsEnabled"
                            Value="False">
                            <Setter
                                Property="TextElement.Foreground"
                                Value="{DynamicResource TextFillColorDisabledBrush}" />
                        </Trigger>
                        <Trigger
                            Property="SortDirection"
                            Value="{x:Null}">
                            <Setter
                                TargetName="SortIcon"
                                Property="Visibility"
                                Value="Collapsed" />
                        </Trigger>
                        <Trigger
                            Property="SortDirection"
                            Value="Descending">
                            <Trigger.EnterActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SortIcon"
                                            Storyboard.TargetProperty="(controls:SymbolIcon.RenderTransform).(RotateTransform.Angle)"
                                            From="0"
                                            To="180"
                                            Duration="00:00:00.333" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.EnterActions>
                            <Trigger.ExitActions>
                                <BeginStoryboard>
                                    <Storyboard>
                                        <DoubleAnimation
                                            Storyboard.TargetName="SortIcon"
                                            Storyboard.TargetProperty="(controls:SymbolIcon.RenderTransform).(RotateTransform.Angle)"
                                            From="180"
                                            To="0"
                                            Duration="00:00:00.333" />
                                    </Storyboard>
                                </BeginStoryboard>
                            </Trigger.ExitActions>
                        </Trigger>
                        <Trigger
                            Property="HorizontalContentAlignment"
                            Value="Right">
                            <Setter
                                TargetName="FirstColumn"
                                Property="Width"
                                Value="Auto" />
                            <Setter
                                TargetName="SecondColumn"
                                Property="Width"
                                Value="*" />
                            <Setter
                                TargetName="ContentPresenter"
                                Property="Grid.Column"
                                Value="1" />
                            <Setter
                                TargetName="SortIcon"
                                Property="Grid.Column"
                                Value="0" />
                            <Setter
                                TargetName="SortIcon"
                                Property="Margin"
                                Value="0,0,4,0" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>
</ResourceDictionary>