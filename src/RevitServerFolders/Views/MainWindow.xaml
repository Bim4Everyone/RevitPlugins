<core:WpfUIPlatformWindow
    x:Class="RevitServerFolders.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:local="clr-namespace:RevitServerFolders.Views"
    xmlns:vms="clr-namespace:RevitServerFolders.ViewModels"
    xmlns:core="clr-namespace:dosymep.WpfUI.Core"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml"
    xmlns:me="clr-namespace:dosymep.WpfCore.MarkupExtensions;assembly=dosymep.WpfCore"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    xmlns:wpfbehaviors="clr-namespace:dosymep.WpfCore.Behaviors;assembly=dosymep.WpfCore"
    xmlns:converters="clr-namespace:dosymep.WpfCore.Converters;assembly=dosymep.WpfCore"
    xmlns:dosymepConverters="clr-namespace:dosymep.WPF.Converters"
    xmlns:pluginConverters="clr-namespace:RevitServerFolders.Converters"
    mc:Ignorable="d"
    WindowStartupLocation="CenterOwner"
    Height="450"
    Width="800"
    MinHeight="450"
    MinWidth="800"
    d:DataContext="{d:DesignInstance vms:MainViewModel, IsDesignTimeCreatable=False}">

    <i:Interaction.Behaviors>
        <wpfbehaviors:WpfAttachServiceBehavior
            AttachableService="{Binding ProgressDialogFactory}" />
        <wpfbehaviors:WpfAttachServiceBehavior
            AttachableService="{Binding OpenFolderDialogService}" />
    </i:Interaction.Behaviors>
    <i:Interaction.Triggers>
        <i:EventTrigger
            EventName="Loaded">
            <i:InvokeCommandAction
                Command="{Binding LoadViewCommand}" />
        </i:EventTrigger>
        <i:EventTrigger
            SourceName="_sourceFolderEdit"
            EventName="TextChanged">
            <i:InvokeCommandAction
                Command="{Binding SourceFolderChangedCommand}" />
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Window.Resources>
        <ResourceDictionary>
            <ResourceDictionary.MergedDictionaries>
                <ResourceDictionary
                    Source="../Resources/CustomStyles.xaml" />
            </ResourceDictionary.MergedDictionaries>
            <dosymepConverters:InverseBooleanConverter
                x:Key="InverseBooleanConverter" />

            <converters:BoolToVisibilityConverter
                x:Key="BooleanToVisibilityConverter" />

            <ui:SymbolRegular
                x:Key="DocumentIcon">Document20</ui:SymbolRegular>

            <ui:SymbolRegular
                x:Key="FolderIcon">Folder20</ui:SymbolRegular>

            <pluginConverters:CellImageConverter
                x:Key="CellImageConverter"
                Empty="{ui:SymbolIcon Symbol=Document20}"
                Model="..\Resources\Revit.png"
                Folder="{ui:SymbolIcon Symbol=Folder20}" />

            <ui:TextBlock
                x:Key="NameHeader"
                Text="{me:LocalizationSource MainWindow.NameHeader}" />
            <ui:TextBlock
                x:Key="FullNameHeader"
                Text="{me:LocalizationSource MainWindow.FullNameHeader}" />

            <Style
                TargetType="DockPanel"
                x:Key="VisibleOnExecutingPanel">
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding DataContext.OpenFromFoldersCommand.IsExecuting,
                        RelativeSource={RelativeSource AncestorType=Window}}"
                        Value="True">
                        <Setter
                            Property="Visibility"
                            Value="Visible" />
                    </DataTrigger>
                </Style.Triggers>
                <Setter
                    Property="Visibility"
                    Value="Hidden" />
            </Style>
            <Style
                TargetType="Border"
                x:Key="HiddenOnExecutingBorder"
                BasedOn="{StaticResource CustomBorder}">
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding DataContext.OpenFromFoldersCommand.IsExecuting,
                        RelativeSource={RelativeSource AncestorType=Window}}"
                        Value="True">
                        <Setter
                            Property="Visibility"
                            Value="Hidden" />
                    </DataTrigger>
                </Style.Triggers>
                <Setter
                    Property="Visibility"
                    Value="Visible" />
            </Style>

            <Style
                TargetType="ui:TextBox"
                x:Key="SourceFolderEditStyle"
                BasedOn="{StaticResource DefaultUiTextBoxStyle}">
                <Style.Triggers>
                    <DataTrigger
                        Binding="{Binding DataContext.OpenFromFoldersCommand.IsExecuting,
                        RelativeSource={RelativeSource AncestorType=Window}}"
                        Value="True">
                        <Setter
                            Property="IsEnabled"
                            Value="False" />
                    </DataTrigger>
                    <DataTrigger
                        Binding="{Binding DataContext.SourceFolderChangedCommand.IsExecuting,
                        RelativeSource={RelativeSource AncestorType=Window}}"
                        Value="True">
                        <Setter
                            Property="IsEnabled"
                            Value="False" />
                    </DataTrigger>
                </Style.Triggers>
                <Setter
                    Property="IsEnabled"
                    Value="True" />
            </Style>
        </ResourceDictionary>
    </Window.Resources>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition
                Height="Auto" />
            <RowDefinition
                Height="Auto" />
            <RowDefinition
                Height="*" />
            <RowDefinition
                Height="Auto" />
        </Grid.RowDefinitions>

        <ui:TitleBar
            Grid.Row="0"
            Title="{Binding Title}" />

        <Border
            Margin="10 0 10 5"
            Grid.Row="1"
            Style="{StaticResource CustomBorder}">
            <StackPanel>
                <DockPanel>
                    <ui:TextBlock
                        Width="130"
                        Text="{me:LocalizationSource MainWindow.LabelTarget}" />
                    <ui:ToggleSwitch
                        Margin="5 0"
                        IsChecked="{Binding ClearTargetFolder}"
                        Content="{me:LocalizationSource MainWindow.ClearTarget}" />
                    <ui:ToggleSwitch
                        IsChecked="{Binding OpenTargetWhenFinish}"
                        Content="{me:LocalizationSource MainWindow.OpenTargetWhenFinish}" />
                </DockPanel>
                <DockPanel
                    Margin="0 5"
                    LastChildFill="True">
                    <ui:Button
                        DockPanel.Dock="Right"
                        Height="36"
                        Margin="5 0 0 0"
                        Content="{ui:SymbolIcon Symbol=Folder20}"
                        Command="{Binding OpenFolderDialogCommand}" />
                    <ui:TextBox
                        Text="{Binding TargetFolder, UpdateSourceTrigger=PropertyChanged}" />
                </DockPanel>
                <DockPanel
                    Margin="0 5 0 0">
                    <ui:TextBlock
                        Width="130"
                        Text="{me:LocalizationSource MainWindow.LabelSource}" />
                    <ui:ToggleSwitch
                        Margin="5 0"
                        Content="{me:LocalizationSource MainWindow.ExportRooms}"
                        IsChecked="{Binding IsExportRooms}"
                        Visibility="{Binding IsExportRoomsVisible, 
                    Converter={StaticResource BooleanToVisibilityConverter}}" />
                </DockPanel>
                <DockPanel
                    Margin="0 5 0 0"
                    LastChildFill="True">
                    <ui:Button
                        DockPanel.Dock="Right"
                        x:Name="_sourceFolderEdit"
                        Height="36"
                        Margin="5 0 0 0"
                        Content="{ui:SymbolIcon Symbol=Folder20}"
                        IsEnabled="{Binding SourceFolderChangedCommand.IsExecuting,
                        Converter={StaticResource InverseBooleanConverter}}"
                        Command="{Binding OpenFromFoldersCommand}" />
                    <ui:TextBox
                        Style="{StaticResource SourceFolderEditStyle}"
                        Text="{Binding SourceFolder, UpdateSourceTrigger=PropertyChanged}" />
                </DockPanel>
            </StackPanel>
        </Border>

        <Border
            Margin="10 5 10 0"
            Grid.Row="2"
            Style="{StaticResource CustomBorder}">

            <ui:DataGrid
                Grid.Row="5"
                Margin="5"
                Style="{StaticResource CustomResizableDataGridStyle}"
                ItemsSource="{Binding ModelObjects}"
                SelectedItem="{Binding SelectedObject}">

                <ui:DataGrid.Resources>
                    <Style
                        TargetType="DataGridRow"
                        BasedOn="{StaticResource DefaultDataGridRowStyle}">
                        <Style.Triggers>
                            <DataTrigger
                                Value="True"
                                Binding="{Binding SkipObject}">
                                <Setter
                                    Property="Opacity"
                                    Value="30" />
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </ui:DataGrid.Resources>

                <ui:DataGrid.Columns>
                    <DataGridCheckBoxColumn
                        CanUserReorder="False"
                        CanUserResize="False"
                        CanUserSort="False"
                        Width="Auto"
                        Binding="{Binding SkipObject, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBooleanConverter}}">
                        <DataGridCheckBoxColumn.Header>
                            <CheckBox
                                IsChecked="{Binding DataContext.SkipAll, RelativeSource={RelativeSource AncestorType=ui:DataGrid}, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged, Converter={StaticResource InverseBooleanConverter}}" />
                        </DataGridCheckBoxColumn.Header>
                    </DataGridCheckBoxColumn>
                    <DataGridTemplateColumn
                        CanUserReorder="False"
                        CanUserResize="False"
                        CanUserSort="False"
                        Width="Auto">
                        <DataGridTemplateColumn.CellTemplate>
                            <DataTemplate>
                                <Image
                                    Width="20"
                                    Height="20"
                                    Source="{Binding ., Converter={StaticResource CellImageConverter}}" />
                            </DataTemplate>
                        </DataGridTemplateColumn.CellTemplate>
                    </DataGridTemplateColumn>
                    <DataGridTextColumn
                        Width="200"
                        IsReadOnly="True"
                        Binding="{Binding Name}"
                        Header="{StaticResource NameHeader}" />
                    <DataGridTextColumn
                        IsReadOnly="True"
                        Binding="{Binding FullName}"
                        Header="{StaticResource FullNameHeader}" />
                </ui:DataGrid.Columns>
            </ui:DataGrid>
        </Border>

        <StackPanel
            Grid.Row="3"
            Orientation="Horizontal"
            HorizontalAlignment="Right">
            <ui:TextBlock
                Margin="10"
                Style="{StaticResource CustomErrorText}"
                Text="{Binding ErrorText}" />

            <ui:Button
                Margin="10"
                Width="80"
                Appearance="Info"
                IsDefault="True"
                Click="ButtonOk_Click"
                Content="{me:LocalizationSource Ok}"
                Command="{Binding AcceptViewCommand}" />

            <ui:Button
                Margin="10"
                Width="80"
                IsCancel="True"
                Click="ButtonCancel_Click"
                Content="{me:LocalizationSource Cancel}" />
        </StackPanel>
    </Grid>
</core:WpfUIPlatformWindow>