<base:PlatformWindow
    x:Class="RevitValueModifier.Views.MainWindow"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
    
    xmlns:base="clr-namespace:dosymep.WPF.Views"
    xmlns:local="clr-namespace:RevitValueModifier.Views"
    xmlns:vms="clr-namespace:RevitValueModifier.ViewModels"
    xmlns:converters="clr-namespace:dosymep.WPF.Converters"
    
    mc:Ignorable="d"
    WindowStartupLocation="CenterOwner"
    
    Title="{DynamicResource MainWindow.Title}"
    Height="450" Width="700"
    MinHeight="450" MinWidth="700"

    d:DataContext="{d:DesignInstance vms:MainViewModel, IsDesignTimeCreatable=False}">

    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Loaded">
            <i:InvokeCommandAction
                Command="{Binding LoadViewCommand}"
                CommandParameter="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="Auto" />
            <RowDefinition Height="*" />
            <RowDefinition Height="Auto" />
        </Grid.RowDefinitions>

        <Grid
            Grid.Row="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            
            <TextBlock
                Grid.Row="0"
                Grid.Column="0"
                Margin="5"
                VerticalAlignment="Center"
                Text="{DynamicResource ResourceKey=MainWindow.SelectParamToRecord}"/>

            <ComboBox
                Grid.Row="0"
                Grid.Column="1"
                Grid.ColumnSpan="2"
                Margin="5"
                IsEditable="True"
                StaysOpenOnEdit="True"
                ItemsSource="{Binding Path=CommonParams}"
                SelectedItem="{Binding Path=SelectedCommonParam}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock>
                            <TextBlock Text="{Binding Path=ParamName}" FontWeight="Bold"/>
                            <TextBlock Text=" (id: "/>
                            <TextBlock Text="{Binding Path=Id}"/>
                            <TextBlock Text=", system: "/>
                            <TextBlock Text="{Binding Path=IsBuiltin, Converter={converters:BoolToStringConverter}}"/>
                            <TextBlock Text=", shared: "/>
                            <TextBlock Text="{Binding Path=IsShared, Converter={converters:BoolToStringConverter}}"/>
                            <TextBlock Text=")"/>
                        </TextBlock>
                    </DataTemplate>
                </ComboBox.ItemTemplate>
            </ComboBox>
        </Grid>

        <Grid
            Grid.Row="1">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="240"/>
            </Grid.ColumnDefinitions>
            
            <TextBlock
                Grid.Column="0"
                Margin="5"
                VerticalAlignment="Center"
                Text="{DynamicResource ResourceKey=MainWindow.EnterParamValueMask}"/>

            <TextBox 
                Grid.Column="1"
                Margin="5"
                Text="{Binding Path=ParamValueMask, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="TextChanged">
                        <i:InvokeCommandAction
                        Command="{Binding Path=ParamUpdateCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </TextBox>

            <ComboBox
                Grid.Column="2"
                Margin="5"
                ItemsSource="{Binding Path=CommonParams}"
                SelectedItem="{Binding Path=SelectedCommonParamForAdd}">
                <ComboBox.ItemTemplate>
                    <DataTemplate>
                        <TextBlock>
                            <TextBlock Text="{Binding Path=ParamName}" FontWeight="Bold"/>
                            <TextBlock Text=" (id: "/>
                            <TextBlock Text="{Binding Path=Id}"/>
                            <TextBlock Text=", system: "/>
                            <TextBlock Text="{Binding Path=IsBuiltin, Converter={converters:BoolToStringConverter}}"/>
                            <TextBlock Text=", shared: "/>
                            <TextBlock Text="{Binding Path=IsShared, Converter={converters:BoolToStringConverter}}"/>
                            <TextBlock Text=")"/>
                        </TextBlock>
                    </DataTemplate>
                </ComboBox.ItemTemplate>

                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction
                        Command="{Binding AddParamInMaskCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
            
            <TextBlock
                Grid.Column="2"
                Margin="10 5"
                VerticalAlignment="Center"
                IsHitTestVisible="False"
                Text="{DynamicResource ResourceKey=MainWindow.SelectedParamForAdd}"/>
        </Grid>


        <TextBlock
            Grid.Row="2" 
            Grid.Column="0"
            Margin="5"
            VerticalAlignment="Center"
            Text="{DynamicResource ResourceKey=MainWindow.ElementParamValueExample}"/>
        
        <StackPanel
            Grid.Row="2"
            Orientation="Horizontal"
            FlowDirection="RightToLeft">

            <TextBox 
                Margin="5"
                FlowDirection="LeftToRight"
                MinWidth="200"
                Text="{Binding Path=RevitElementsFilter, UpdateSourceTrigger=PropertyChanged}"/>
            
            <TextBlock
                Margin="5"
                VerticalAlignment="Center"
                Text="{DynamicResource ResourceKey=MainWindow.Filtration}"/>

        </StackPanel>
        
        
        <ListView 
            Grid.Row="3"
            Margin="5"
            ItemsSource="{Binding Path=RevitElements, UpdateSourceTrigger=PropertyChanged}" >
            <ListView.View>
                <GridView>
                    <GridViewColumn 
                        Width="200"
                        Header="{DynamicResource ResourceKey=MainWindow.RevitElement}"
                        DisplayMemberBinding="{Binding Path=ElemName}"/>
                    <GridViewColumn 
                        Width="400"
                        Header="{DynamicResource ResourceKey=MainWindow.ElementParamValue}"
                        DisplayMemberBinding="{Binding Path=ParamValue}"/>
                </GridView>
            </ListView.View>
        </ListView>

        
        <StackPanel
            Grid.Row="4"
            Height="45"
            Orientation="Horizontal"
            HorizontalAlignment="Right">
            <TextBlock
                Margin="10"
                Foreground="Orange"
                VerticalAlignment="Center"
                Text="{Binding ErrorText}" />

            <Button
                Margin="10"
                Width="80"
                Content="{DynamicResource MainWindow.ButtonOk}"
                IsDefault="True"
                Click="ButtonOk_Click"
                Command="{Binding AcceptViewCommand}" />

            <Button
                Margin="10"
                Width="80"
                Content="{DynamicResource MainWindow.ButtonCancel}"
                IsCancel="True"
                Click="ButtonCancel_Click" />
        </StackPanel>
    </Grid>
</base:PlatformWindow>
