<ResourceDictionary 
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">

    <!--Colors-->

    <!--Background Colors-->
    <SolidColorBrush x:Key="PrimaryBackgroundColor" Color="#496FFF"/>
    <SolidColorBrush x:Key="SecondaryBackgroundColor" Color="#FFFFFF"/>

    <!--Primary Colors-->
    <SolidColorBrush x:Key="PrimaryBlueColor" Color="#263FAA"/>
    <SolidColorBrush x:Key="PrimaryGrayColor" Color="#64677A"/>

    <!--Secundary Colors-->
    <SolidColorBrush x:Key="SecondaryBlueColor" Color="#496FFF"/>
    <SolidColorBrush x:Key="SecondaryGrayColor" Color="#CECECE"/>

    <!-- Tertiary Colors-->
    <SolidColorBrush x:Key="TertiaryBlueColor" Color="#C2D1FC"/>


    <!-- Start: ToggleButtonStyle-->
    <Style x:Key="ToggleButtonStyle" TargetType="{x:Type ToggleButton}">
        <Setter Property="Background" Value="{DynamicResource SecondaryGrayColor}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource PrimaryGrayColor}"/>
        <Setter Property="Height" Value="20"/>
        <Setter Property="Width" Value="35"/>
        <Setter Property="MaxHeight" Value="20"/>
        <Setter Property="MaxWidth" Value="35"/>
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="HorizontalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ToggleButton}">
                    <Grid>
                        <Border x:Name="Border"
                                    Background="{TemplateBinding Background}"
                                    CornerRadius="7"
                                    Height="14"
                                    Width="35"
                                    VerticalAlignment="Center"
                                    HorizontalAlignment="Center">
                            <Border.Effect>
                                <DropShadowEffect ShadowDepth="0.5" Opacity=".3"/>
                            </Border.Effect>
                        </Border>

                        <Ellipse x:Name="Ellipse"
                                     Height="20"
                                     Width="20"
                                     VerticalAlignment="Center"
                                     HorizontalAlignment="Left"
                                     Fill="{DynamicResource SecondaryBackgroundColor}"
                                     Stroke="{TemplateBinding BorderBrush}"
                                     StrokeThickness="3">
                            <Ellipse.Effect>
                                <DropShadowEffect ShadowDepth="0.5" Opacity=".3"/>
                            </Ellipse.Effect>
                        </Ellipse>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <EventTrigger RoutedEvent="Checked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="#C2D1FC" Duration="0:0:0.1"/>
                                    <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="15 0 0 0" Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <EventTrigger RoutedEvent="Unchecked">
                            <BeginStoryboard>
                                <Storyboard>
                                    <ColorAnimation Storyboard.TargetName="Border"
                                                        Storyboard.TargetProperty="(Border.Background).(SolidColorBrush.Color)"
                                                        To="#CECECE" Duration="0:0:0.1"/>
                                    <ThicknessAnimation Storyboard.TargetName="Ellipse"
                                                            Storyboard.TargetProperty="Margin"
                                                            To="0 0 0 0" Duration="0:0:0.1"/>
                                </Storyboard>
                            </BeginStoryboard>
                        </EventTrigger>

                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="Ellipse" 
                                    Property="Fill"
                                    Value="{DynamicResource SecondaryBlueColor}"/>
                            <Setter TargetName="Ellipse" 
                                    Property="Stroke"
                                    Value="{DynamicResource PrimaryBlueColor}"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>

    </Style>
    <!-- End: ToggleButtonStyle-->


    <Style x:Key="ToggleButtonWithTooltipStyle" TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ToggleButtonStyle}">

        <Setter Property="ToolTipService.InitialShowDelay" Value="1000" />
        <Setter Property="ToolTipService.ShowDuration" Value="20000" />
        <Setter Property="ToolTipService.BetweenShowDelay" Value="1" />
    </Style>



    <Style x:Key="TextBlockStyle" TargetType="{x:Type TextBlock}">

        <Setter Property="Foreground" Value="{StaticResource PrimaryGrayColor}" />
        <Setter Property="Margin" Value="5" />
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Bahnschrift" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
    </Style>


    <Style x:Key="TextBlockWithTooltipStyle" TargetType="{x:Type TextBlock}" BasedOn="{StaticResource TextBlockStyle}">

        <Setter Property="ToolTipService.InitialShowDelay" Value="1000" />
        <Setter Property="ToolTipService.ShowDuration" Value="20000" />
        <Setter Property="ToolTipService.BetweenShowDelay" Value="1" />
    </Style>




    <Style x:Key="TextBoxStyle" TargetType="{x:Type TextBox}">
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryGrayColor}" />

        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Bahnschrift" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border 
                        CornerRadius="4"
                        BorderBrush="{StaticResource PrimaryGrayColor}"
                        BorderThickness="1"
                        Background="{TemplateBinding Background}">
                        <Grid>
                            <!--<TextBox Margin="1" Text="{TemplateBinding Text}" BorderThickness="0"
                                     VerticalContentAlignment="Center"
                                     Foreground="{TemplateBinding Foreground}"/>-->

                            <ScrollViewer x:Name="PART_ContentHost" Foreground="{TemplateBinding Foreground}"
                              BorderThickness="0" IsTabStop="False" Margin="1" Padding="{TemplateBinding Padding}" />
                        </Grid>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="TextBoxWithTooltipStyle" TargetType="{x:Type TextBox}" BasedOn="{StaticResource TextBoxStyle}">

        <Setter Property="ToolTipService.InitialShowDelay" Value="1000" />
        <Setter Property="ToolTipService.ShowDuration" Value="20000" />
        <Setter Property="ToolTipService.BetweenShowDelay" Value="1" />
    </Style>
    
    

    <Style x:Key="SimpleButtonStyle" TargetType="{x:Type Button}">
        <Setter Property="Background" Value="White" />
        <Setter Property="Foreground" Value="{StaticResource PrimaryGrayColor}" />
        
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Bahnschrift" />

        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border 
                        CornerRadius="4"
                        BorderBrush="{StaticResource PrimaryGrayColor}"
                        BorderThickness="1"
                        Background="{TemplateBinding Background}">
                        <Grid>
                            <ContentPresenter Content="{TemplateBinding Content}" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" />
                        </Grid>
                    </Border>

                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="#F0F0F0" />
                        </Trigger>

                        <Trigger Property="IsPressed" Value="True">
                            <Setter Property="Background" Value="#E8E8E8" />
                        </Trigger>

                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Background" Value="{StaticResource SecondaryGrayColor}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="TransparentButton" TargetType="{x:Type Button}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="Button">
                    <Border Background="Transparent">
                        <ContentPresenter/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>






    <ControlTemplate x:Key="ComboBoxTextBox" TargetType="{x:Type TextBox}">
        <Border x:Name="PART_ContentHost" Focusable="False" Background="{TemplateBinding Background}"/>
    </ControlTemplate>

    <ControlTemplate x:Key="ComboBoxToggleButton" TargetType="{x:Type ToggleButton}">
        <Grid>
            <Grid.ColumnDefinitions>
                <ColumnDefinition />
                <ColumnDefinition Width="20" />
            </Grid.ColumnDefinitions>
            <Border
                  x:Name="Border" 
                  Grid.ColumnSpan="2"
                  CornerRadius="5"
                  Background="White"
                  BorderBrush="{StaticResource PrimaryGrayColor}"
                  BorderThickness="1" />
            <Border 
                  Grid.Column="0"
                  CornerRadius="5 0 0 5" 
                  Margin="1" 
                  Background="White" 
                  BorderBrush="{StaticResource PrimaryGrayColor}"
                  BorderThickness="0,0,1,0" />
            <Path 
                  x:Name="Arrow"
                  Grid.Column="1"     
                  Fill="{StaticResource PrimaryGrayColor}"
                  HorizontalAlignment="Center"
                  VerticalAlignment="Center"
                  Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z" />
        </Grid>
    </ControlTemplate>
    

    <Style x:Key="ComboBoxStyle" TargetType="{x:Type ComboBox}">
        <Setter Property="OverridesDefaultStyle" Value="true"/>
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
        <Setter Property="ScrollViewer.CanContentScroll" Value="true"/>
        <Setter Property="MinWidth" Value="120"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="Foreground" Value="{StaticResource PrimaryGrayColor}"/>
        <Setter Property="FontSize" Value="14" />
        <Setter Property="FontFamily" Value="Bahnschrift" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ComboBox}">
                    <Grid>
                        <ToggleButton 
                            Name="ToggleButton" 
                            Template="{StaticResource ComboBoxToggleButton}" 
                            Grid.Column="2" 
                            Focusable="false"
                            IsChecked="{Binding Path=IsDropDownOpen,Mode=TwoWay,RelativeSource={RelativeSource TemplatedParent}}"
                            ClickMode="Press">
                        </ToggleButton>
                        <ContentPresenter Name="ContentSite" IsHitTestVisible="False"  Content="{TemplateBinding SelectionBoxItem}"
                            ContentTemplate="{TemplateBinding SelectionBoxItemTemplate}"
                            ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"
                            Margin="3,3,23,3"
                            VerticalAlignment="Center"
                            HorizontalAlignment="Left" />
                        <TextBox x:Name="PART_EditableTextBox"
                            Style="{x:Null}" 
                            Template="{StaticResource ComboBoxTextBox}" 
                            HorizontalAlignment="Left" 
                            VerticalAlignment="Center" 
                            Margin="3,3,23,3"
                            Focusable="True" 
                            Background="White"
                            Foreground="{StaticResource PrimaryGrayColor}"
                            Visibility="Hidden"
                            IsReadOnly="{TemplateBinding IsReadOnly}"/>
                        <Popup 
                            Name="Popup"
                            Placement="Bottom"
                            IsOpen="{TemplateBinding IsDropDownOpen}"
                            AllowsTransparency="True" 
                            Focusable="False"
                            PopupAnimation="Slide">

                            <Grid Name="DropDown"
                              SnapsToDevicePixels="True"                
                              MinWidth="{TemplateBinding ActualWidth}"
                              MaxHeight="{TemplateBinding MaxDropDownHeight}">
                                <Border 
                                    x:Name="DropDownBorder"
                                    Background="White"

                                    BorderThickness="1"
                                    BorderBrush="{StaticResource PrimaryGrayColor}"/>
                                <ScrollViewer Margin="4,6,4,6" SnapsToDevicePixels="True">
                                    <StackPanel IsItemsHost="True" KeyboardNavigation.DirectionalNavigation="Contained" />
                                </ScrollViewer>
                            </Grid>
                        </Popup>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="HasItems" Value="false">
                            <Setter TargetName="DropDownBorder" Property="MinHeight" Value="95"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="false">
                            <Setter Property="Foreground" Value="{StaticResource PrimaryGrayColor}"/>
                        </Trigger>
                        <Trigger Property="IsGrouping" Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll" Value="false"/>
                        </Trigger>
                        <Trigger SourceName="Popup" Property="Popup.AllowsTransparency" Value="true">
                            <Setter TargetName="DropDownBorder" Property="CornerRadius" Value="0"/>
                            <Setter TargetName="DropDownBorder" Property="Margin" Value="0,2,0,0"/>
                        </Trigger>
                        <Trigger Property="IsEditable"  Value="true">
                            <Setter Property="IsTabStop" Value="false"/>
                            <Setter TargetName="PART_EditableTextBox" Property="Visibility" Value="Visible"/>
                            <Setter TargetName="ContentSite" Property="Visibility" Value="Hidden"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
        </Style.Triggers>
    </Style>


    <Style x:Key="ComboBoxWithTooltipStyle" TargetType="{x:Type ComboBox}" BasedOn="{StaticResource ComboBoxStyle}">

        <Setter Property="ToolTipService.InitialShowDelay" Value="1000" />
        <Setter Property="ToolTipService.ShowDuration" Value="20000" />
        <Setter Property="ToolTipService.BetweenShowDelay" Value="1" />
    </Style>

    <!-- SCROLL -->
    <Style x:Key="ScrollBarLineButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Canvas Height="18">
                        <Polygon Fill="{StaticResource SecondaryGrayColor}" Points="3,15 15,15 9,3"></Polygon>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarLineButtonBottomStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Canvas Height="18">
                        <Polygon Fill="{StaticResource SecondaryGrayColor}" Points="3,3 9,15 15,3"></Polygon>
                    </Canvas>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButtonStyle" TargetType="{x:Type RepeatButton}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border BorderBrush="Transparent"></Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumbStyle" TargetType="{x:Type Thumb}">
        <Setter Property="IsTabStop" Value="False"/>
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Margin" Value="1,0,1,0" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Rectangle Fill="{StaticResource SecondaryGrayColor}" Margin="4 2 2 2"></Rectangle>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="18"/>
                <RowDefinition Height="*"/>
                <RowDefinition MaxHeight="18"/>
            </Grid.RowDefinitions>

            <RepeatButton Grid.Row="0" Height="18"
                          Style="{StaticResource ScrollBarLineButtonStyle}"
                          Command="ScrollBar.LineUpCommand" >
            </RepeatButton>
            <Track Name="PART_Track" Grid.Row="1" 
                   IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageUpCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                    </RepeatButton>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumbStyle}">
                    </Thumb>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Command="ScrollBar.PageDownCommand" Style="{StaticResource ScrollBarPageButtonStyle}">
                    </RepeatButton>
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3" Height="18"
                          Style="{StaticResource ScrollBarLineButtonBottomStyle}"
                          Command="ScrollBar.LineDownCommand">
            </RepeatButton>
        </Grid>
    </ControlTemplate>

    <Style TargetType="{x:Type ScrollBar}">
        <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
    </Style>
</ResourceDictionary>