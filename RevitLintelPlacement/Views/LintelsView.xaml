<base:PlatformWindow
    xmlns:base="clr-namespace:dosymep.WPF.Views"
    x:Class="RevitLintelPlacement.Views.LintelsView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RevitLintelPlacement.Views"
             xmlns:extensions="clr-namespace:RevitLintelPlacement.Extensions"
             xmlns:vm="clr-namespace:RevitLintelPlacement.ViewModels"
             xmlns:i="http://schemas.microsoft.com/expression/2010/interactivity"
             xmlns:converters="clr-namespace:RevitLintelPlacement.Converters"
             mc:Ignorable="d" 
             Height="650" Width="1150"
             MinHeight="650" MinWidth="1150"
             d:DesignHeight="450" d:DesignWidth="800"
             x:Name="LintelView"
             Title="Навигатор"
             d:DataContext="{d:DesignInstance vm:LintelCollectionViewModel, IsDesignTimeCreatable=False}">
    <Window.Resources>
        <converters:EnumConverter x:Key="EnumConverter"/>
        <converters:IndexConverter x:Key="IndexConverter"/>
    </Window.Resources>
    <i:Interaction.Triggers>
        <i:EventTrigger EventName="Closing">
            <i:InvokeCommandAction Command="{Binding CloseCommand}"/>
        </i:EventTrigger>
    </i:Interaction.Triggers>
    <Grid Margin="5 0">
        <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="*"/>
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <StackPanel Grid.Row="0" Margin="0 10" Orientation="Horizontal">
            <ComboBox Width="300" FontSize="14" Background="White" ItemsSource="{Binding Source={extensions:EnumToItemsSource {x:Type vm:SampleMode}}}"
                  SelectedItem="{Binding SelectedSampleMode, Converter={StaticResource EnumConverter},
            ConverterParameter={x:Type vm:SampleMode}, UpdateSourceTrigger=PropertyChanged, Mode=TwoWay}">
                <i:Interaction.Triggers>
                    <i:EventTrigger EventName="SelectionChanged">
                        <i:InvokeCommandAction Command="{Binding SampleModeChangedCommand}"/>
                    </i:EventTrigger>
                </i:Interaction.Triggers>
            </ComboBox>
        </StackPanel>
        <ListBox Grid.Row="1"
                 SelectionMode="Single"
            ItemsSource="{Binding Source={extensions:EnumToItemsSource {x:Type vm:ElementInWallKind}}}" 
                 SelectedItem="{Binding SelectedElementKind, Converter={StaticResource EnumConverter}, ConverterParameter={x:Type vm:ElementInWallKind}}">
            <ListBox.ItemsPanel>
                <ItemsPanelTemplate>
                    <StackPanel Orientation="Horizontal"/>
                </ItemsPanelTemplate>
            </ListBox.ItemsPanel>
            <ListBox.ItemContainerStyle>
                <Style TargetType="{x:Type ListBoxItem}">
                    <Setter Property="Template">
                        <Setter.Value>
                            <ControlTemplate TargetType="{x:Type ListBoxItem}">
                                <ContentPresenter />
                            </ControlTemplate>
                        </Setter.Value>
                    </Setter>
                </Style>
            </ListBox.ItemContainerStyle>
            <ListBox.ItemTemplate>
                <DataTemplate DataType="{x:Type vm:ElementInWallKind}">
                    <RadioButton Margin="5" FontSize="14" Content="{Binding}">
                        <RadioButton.IsChecked>
                            <Binding Path="IsSelected"
                             RelativeSource="{RelativeSource AncestorType=ListBoxItem}"
                             Mode="TwoWay" />
                        </RadioButton.IsChecked>
                    </RadioButton>
                </DataTemplate>
            </ListBox.ItemTemplate>
            <i:Interaction.Triggers>
                <i:EventTrigger EventName="SelectionChanged">
                    <i:InvokeCommandAction Command="{Binding SelectionElementKindChangedCommand}" />
                </i:EventTrigger>
            </i:Interaction.Triggers>
        </ListBox>
        <DataGrid Grid.Row="2"
            AutoGenerateColumns="False"
                  CanUserAddRows="False"
                  CanUserDeleteRows="False"
                  CanUserReorderColumns="False"
                  IsReadOnly="True"
                  VirtualizingPanel.IsVirtualizingWhenGrouping="True"
            ItemsSource="{Binding LintelsViewSource.View, UpdateSourceTrigger=PropertyChanged, Mode=OneWay}">
            <DataGrid.Columns >
                <DataGridTemplateColumn Width="75" Header="Перемычка">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type vm:LintelInfoViewModel}">
                            <Button Content="{Binding LintelId}" Command="{Binding ElementName=LintelView, 
                                Path=DataContext.SelectAndShowElementCommand}" CommandParameter="{Binding LintelId}">
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTemplateColumn Width="75" Header="Проем">
                    <DataGridTemplateColumn.CellTemplate>
                        <DataTemplate DataType="{x:Type vm:LintelInfoViewModel}">
                            <Button Content="{Binding ElementInWallId}" Command="{Binding ElementName=LintelView, 
                                Path=DataContext.SelectAndShowElementCommand}" CommandParameter="{Binding ElementInWallId}">
                            </Button>
                        </DataTemplate>
                    </DataGridTemplateColumn.CellTemplate>
                </DataGridTemplateColumn>
                <DataGridTextColumn Width="580" Header="Семейство проема: типоразмер" Binding="{Binding ElementInWallName}" ></DataGridTextColumn>
                <DataGridTextColumn Width="370" Header="Типоразмер основы" Binding="{Binding WallTypeName}" ></DataGridTextColumn>
            </DataGrid.Columns>
            <DataGrid.GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Margin" Value="0,0,0,5" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander IsExpanded="True"  BorderThickness="1,1,1,5" Background="DimGray" BorderBrush="SlateGray"
                                                      Foreground="White">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock Margin="5,0,0,0" 
                                                               FontWeight="Bold"
                                                               Text="{Binding Path=Name}"/>
                                                    <TextBlock FontWeight="Bold" 
                                                               Margin="10 0 0 0"
                                                               Text="{Binding Path=ItemCount, StringFormat=Количество: {0}}"/>
                                                </StackPanel>
                                            </Expander.Header>
                                            <Expander.Content>
                                                <ItemsPresenter />
                                            </Expander.Content>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
                <GroupStyle>
                    <GroupStyle.ContainerStyle>
                        <Style TargetType="{x:Type GroupItem}">
                            <Setter Property="Margin" Value="0,0,0,5" />
                            <Setter Property="Template">
                                <Setter.Value>
                                    <ControlTemplate TargetType="{x:Type GroupItem}">
                                        <Expander IsExpanded="True" Background="LightGray" BorderBrush="SlateGray"
                                                      Foreground="DimGray" BorderThickness="1,1,1,5">
                                            <Expander.Header>
                                                <StackPanel Orientation="Horizontal">
                                                    <TextBlock FontWeight="Bold"
                                                                   Text="{Binding Path=Name}"
                                                                   Margin="5,0,0,0" />
                                                    <TextBlock FontWeight="Bold" Text="{Binding Path=ItemCount}"
                                                                   Margin="10 0 0 0" />
                                                </StackPanel>
                                            </Expander.Header>
                                            <Expander.Content>
                                                <ItemsPresenter />
                                            </Expander.Content>
                                        </Expander>
                                    </ControlTemplate>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </GroupStyle.ContainerStyle>
                </GroupStyle>
            </DataGrid.GroupStyle>
            
            <DataGrid.CellStyle>
                <Style TargetType="DataGridCell">
                    <Setter Property="Foreground" Value="DimGray"></Setter>
                    <Style.Triggers>
                        <Trigger Property="IsSelected" Value="True">
                            <Setter Property="Background" Value="LightGray"></Setter>
                        </Trigger>
                    </Style.Triggers>
                </Style>
            </DataGrid.CellStyle>
        </DataGrid>
        <Grid Grid.Row="3" Height="30">
            <Grid.ColumnDefinitions>
                <ColumnDefinition/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition/>
            </Grid.ColumnDefinitions>
            <Button Grid.Column="0" Width="70" BorderBrush="Transparent" Background="Transparent" FontSize="20" HorizontalAlignment="Right" Command="{Binding SelectPreviousCommand}">
                <Image Source="../Resources/icons8-arrow-left.png"/>
            </Button>
            <TextBlock Grid.Column="1" Width="80" Margin="25 0 0 0" VerticalAlignment="Center" FontSize="14" 
                       Text="{Binding LintelsViewSource.View.CurrentItem.LintelId}"/>
            <DockPanel Grid.Column="2" LastChildFill="False">
                <Button DockPanel.Dock="Left" FontSize="20" Width="70"  BorderBrush="Transparent" Background="Transparent" Command="{Binding SelectNextCommand}">
                    <Image Source="../Resources/icons8-arrow-next.png"/>
                </Button>
                <TextBlock DockPanel.Dock="Right" FontSize="14" Margin="2 0 30 0" VerticalAlignment="Center" Text="{Binding CountLintelInView}"></TextBlock>
                <TextBlock DockPanel.Dock="Right" FontSize="14" VerticalAlignment="Center" Text="/"/>
                <TextBlock DockPanel.Dock="Right" FontSize="14" Margin="10 0 2 0" VerticalAlignment="Center" Text="{Binding LintelsViewSource.View.CurrentPosition, Converter={StaticResource IndexConverter}}"></TextBlock>
            </DockPanel>
        </Grid>
    </Grid>
</base:PlatformWindow>
